name: PaperPulse Agent Daily Run

on:
  schedule:
    # Run daily at 5:00 AM UTC (1:00 PM UTC delivery time - 8 hours processing buffer)
    - cron: '0 5 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  # Email Service
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
  FROM_NAME: PaperPulse
  
  # Supabase Database
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
  
  # AI Summarization
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  
  # Agent Configuration
  DIGEST_OUTPUT_DIR: ../web/public/static/digests
  MAX_PAPERS_PER_KEYWORD: 50
  DEFAULT_SUMMARY_MODEL: llama-3.1-8b-instant-groq

jobs:
  send-digest:
    runs-on: ubuntu-latest
    environment: paperpulse  # Use the paperpulse environment where secrets are stored
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      working-directory: ./agent
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run PaperPulse Agent
      working-directory: ./agent
      env:
        # Email service configuration
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        FROM_NAME: "PaperPulse"
        
        # Supabase configuration
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        
        # Agent configuration
        MAX_PAPERS_PER_KEYWORD: 150
        DIGEST_OUTPUT_DIR: "../web/public/static/digests"
        
        # Logging
        LOG_LEVEL: INFO
        
      run: |
        python -m paperpulse.main
        
    - name: Upload digest artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: daily-digest-${{ github.run_number }}
        path: |
          web/public/static/digests/*.json
          agent/logs/*.log
        retention-days: 30
        
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Daily Digest Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The daily paper digest workflow failed on ${new Date().toISOString()}.\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            labels: ['bug', 'automation']
          })

